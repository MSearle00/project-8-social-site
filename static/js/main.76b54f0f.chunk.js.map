{"version":3,"sources":["images/thumbUp.svg","images/thumbDown.svg","images/deletePost.svg","images/settings.svg","images/noNewMessage.svg","components/likeButtons.js","components/dislikeButton.js","components/deleteCard.js","components/cards.js","pages/Feed.js","pages/NewPost.js","pages/Profile.js","pages/Settings.js","pages/Messages.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LikeButton","props","state","likes","this","setState","className","src","thumbUp","onClick","addLikes","React","Component","DislikeButton","dislikes","thumbDown","addDislikes","DeleteButton","card","cardRefs","slice","length","deletePost","removeCard","Cards","username","text","Feed","cards","NewPost","usernameChangeHandler","event","target","value","statusChangeHandler","status","i","ref","cardName","key","createRef","newCard","createCard","concat","type","onChange","addCard","Profile","Settings","Messages","App","Navbar","bg","expand","Toggle","aria-controls","Collapse","id","Nav","to","setting","message","class","placeholder","aria-label","Container","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.76b54f0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thumbUp.c172ec2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbDown.996d9d2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/deletePost.d48003a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.49f74820.svg\";","module.exports = __webpack_public_path__ + \"static/media/noNewMessage.1d61a504.svg\";","import React from 'react';\nimport './cards.css'\nimport thumbUp from '../images/thumbUp.svg'\n\n\nclass LikeButton extends React.Component{\n    constructor(props){\n        super();\n\n        this.state = {\n            likes: 0,\n        }\n    }\n\n    addLikes() {\n        this.setState((state) => ({\n          likes: state.likes + 1\n        })\n        )\n      }\n    \n    render(){\n        return(\n            <div>\n\n                <p className=\"likeValue\">{this.state.likes}</p>\n                <button className=\"likeButton\"><img src={thumbUp} onClick={() => this.addLikes()}/></button>\n            </div>\n        )\n    }\n\n}\n\nexport default LikeButton;","import React from 'react';\nimport './cards.css'\nimport thumbDown from '../images/thumbDown.svg'\n\n\nclass DislikeButton extends React.Component{\n    constructor(props){\n        super();\n\n        this.state = {\n            dislikes: 0,\n        }\n    }\n    \n    addDislikes() {\n        this.setState((state)  =>({\n            dislikes: state.dislikes +1\n        })\n        )\n    }\n    \n    render(){\n        return(\n            <div>\n                <p className=\"likeValue\">{this.state.dislikes}</p>\n                <button className=\"likeButton\"><img src={thumbDown} onClick={() => this.addDislikes()}/></button>\n            </div>\n        )\n    }\n\n}\n\nexport default DislikeButton;","import React from 'react';\nimport './cards.css'\nimport deletePost from '../images/deletePost.svg'\n\n\nclass DeleteButton extends React.Component{\n    constructor(props){\n        super();\n\n        this.state = {\n            card: [],\n            cardRefs:[]\n        }\n    }\n\n    removeCard(){\n        this.setState((state) =>{\n          return({\n            card: state.card.slice(0, state.card.length -1),\n            cardRefs: state.cardRefs.slice(0, state.cardRefs.length -1)\n          })\n        })\n        }\n\n    render(){\n        return(\n            <div>\n                <button><img src={deletePost} onClick={() => this.removeCard()}/></button>\n            </div>\n        )\n    }\n\n}\n\nexport default DeleteButton;","import React from 'react';\nimport './cards.css'\nimport LikeButton from './likeButtons.js'\nimport DislikeButton from './dislikeButton.js'\nimport DeleteButton from './deleteCard.js'\n\nclass Cards extends React.Component{\n    constructor(props){\n        super();\n\n        this.state = {\n            username: \"\",\n            text: \"\",\n            likes: 0,\n            dislikes: 0,\n        }\n    }\n\n    render(){\n        return(\n            <div className = \"statusCards\">\n                <div className = \"deleteButton\">\n                    <DeleteButton/>\n                </div>\n                <h4 className=\"statusInfo\"> Username:{this.state.username} </h4>\n                <p className=\"statusInfo\"> Status: {this.state.text} </p>\n                <div className=\"likesCounter\">\n                    <LikeButton/>\n                    <DislikeButton/>\n                    \n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default Cards;","import React from 'react';\nimport '../App.css';\nimport Cards from '../components/cards';\n\n\nclass Feed extends React.Component {\n  constructor(props){\n    super();\n\n    this.state = {\n        cards:[],\n        cardRefs:[],\n    }\n}\n\n  render(){\n  return (\n    <div>\n      <h1>Your Feed</h1>\n      <Cards />\n      <Cards />\n    </div>\n  );\n  }\n}\n\nexport default Feed;","import React from 'react';\nimport '../components/cards.css';\nimport Cards from '../components/cards';\n\nclass NewPost extends React.Component {\n  constructor(props){\n    super();\n\n    this.state = {\n        card:[],\n        cardRefs:[],\n        username:\"\",\n        status:\"\",\n    }\n}\n\ncreateCard(i, ref){\n  return(\n    <Cards cardName={(i+1)} key={i} ref={ref} />\n  )\n }\n\naddCard(){\n  this.setState((state) =>{\n    const ref = React.createRef();\n    const newCard = this.createCard(state.card.length, ref);\n    return({\n      card: state.card.concat(newCard),\n      cardRefs: state.cardRefs.concat(ref)\n    })\n  })\n  }\n\n  usernameChangeHandler = (event) => {\n    this.setState({username:event.target.value})\n  }\n  statusChangeHandler = (event) => {\n    this.setState({status:event.target.value})\n  }\n\n\n  render(){\n  return (\n    <div>\n      <h1>Create a Post</h1>\n      <div className = \"statusCards\">\n        <h4 className=\"statusInfo\"> Username:</h4>\n        <input type=\"text\" className=\"usernameInput\" value={this.state.username} onChange={this.usernameChangeHandler}></input>\n        <p className=\"statusInfo\"> Status:</p>\n        <input type=\"text\" className=\"statusInput\" value={this.state.status} onChange={this.statusChangeHandler} ></input>\n        <div className=\"createPost\">\n        <button onClick={() => this.addCard()}>Create Post</button>\n        </div>\n      </div>\n    </div>\n  );\n  }\n}\n\nexport default NewPost;\n","import React from 'react';\nimport '../App.css';\nimport Cards from '../components/cards';\n\nclass Profile extends React.Component {\n\n  render(){\n  return (\n    <div>\n      <h1>Your Profile</h1>\n    </div>\n  );\n  }\n}\n\nexport default Profile;","import React from 'react';\nimport '../App.css';\n\nclass Settings extends React.Component {\n\n  render(){\n  return (\n    <div>\n      <h1>Your Settings</h1>\n\n    </div>\n  );\n  }\n}\n\nexport default Settings;","import React from 'react';\nimport '../App.css';\n\nclass Messages extends React.Component {\n\n  render(){\n  return (\n    <div>\n      <h1>Your Messages</h1>\n\n    </div>\n  );\n  }\n}\n\nexport default Messages;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Feed from './pages/Feed';\nimport NewPost from './pages/NewPost';\nimport Profile from './pages/Profile';\nimport Settings from './pages/Settings';\nimport Messages from './pages/Messages';\nimport setting from './images/settings.svg';\nimport message from './images/noNewMessage.svg';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n\n  render(){\n  return (\n    <Router>\n      \n      <Navbar bg=\"light\" expand=\"md\">\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Link className=\"nav-link\" to='/settings'><img src={setting}></img></Link>\n              <Link className=\"nav-link\" to='/profile'>Profile</Link>\n              <Link to='/'><h1 className=\"siteName\">Social Site</h1></Link>\n              <Link className=\"nav-link\" to='/newPost'>New Post</Link>\n              <Link className=\"nav-link\" to='/feed'>Feed</Link>\n              <Link className=\"nav-link\" to='/messages'><img src={message}></img></Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <form class=\"form-flex my-2 my-lg-0\">\n      <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n      <button class=\"btn btn-outline-secondary my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n      <Container>\n        <Switch>\n            <Route exact path=\"/\">\n              <Feed/>\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile/>\n            </Route>\n            <Route exact path=\"/messages\">\n              <Messages/>\n            </Route>\n            <Route exact path=\"/newPost\">\n              <NewPost/>\n            </Route>\n            <Route exact path=\"/feed\">\n              <Feed/>\n            </Route>\n            <Route exact path=\"/settings\">\n              <Settings/>\n            </Route>\n            <Route path=\"/\">\n              Error: 404 not found\n            </Route>\n          </Switch>\n      </Container>\n    </Router>\n  );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}